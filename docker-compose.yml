version: "3"
services:
    django:
      build: .
      container_name: auth
      env_file:
        - .env
      ports:
        - "8000:8000"
      volumes:
        - .:/app
        - './back-static:/usr/src/app/back-static'
        - './back-media:/usr/src/app/back-media'
        - .db_data/db.sqlite3:/db.sqlite3
      restart: always
      command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
      depends_on:
        - auth-postgres

    auth-postgres:
      image: postgres:14
      container_name: auth-postgres
      restart: always
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASS}
      ports:
        - "5439:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data

    nginx:
      image: nginx
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./nginx/no_ssl/nginx.conf:/etc/nginx/conf.d/default.conf
        - static_volume:/usr/src/app/back-static
        - media_volume:/usr/src/app/back-media
        - /etc/letsencrypt:/etc/letsencrypt
      depends_on:
        - django

    redis:
      image: redis
      ports:
        - "6379:6379"

    celery:
      build: .
      container_name: auth-celery
      volumes:
        - .:/usr/src/app
      restart: always
      command: celery -A config worker -l info
      depends_on:
        - django


volumes:
  postgres_data:
  static_volume:
  media_volume: